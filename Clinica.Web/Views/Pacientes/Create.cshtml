@using Clinica.Web.Data.Enum
@model Clinica.Web.Models.Paciente

@{
    ViewData["Title"] = "Create";
  
}



<h4>Paciente</h4>
<hr />
<div class="row">
    
    <div class="col-md-6">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cpf" class="control-label"></label>
                <input asp-for="Cpf" type="text" id="cpf" name="Cpf" class="form-control" maxlength="14" />
                <span asp-validation-for="Cpf" class="text-danger"></span>
            </div>
            <div id="cpfValidation" class="invalid-feedback">CPF inválido</div>
            <div class="form-group">
                <label asp-for="dataNascimento" class="control-label"></label>
                <input asp-for="dataNascimento" type="date" class="form-control" />
                <span asp-validation-for="dataNascimento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sexo" class="control-label"></label>
                <select asp-for="Sexo" asp-items="Html.GetEnumSelectList<Sexo>()" class="form-control"></select>
                <span asp-validation-for="Sexo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Telefone" class="control-label"></label>
                <input asp-for="Telefone" type="text" id="telefoneInput" class="form-control" />
                <span asp-validation-for="Telefone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" type="text" id="emailInput" class="form-control" />
                <span asp-validation-for="Email" id="emailError" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-6">
        <img src="~/img/form-image.png">
    </div>
</div>

<div>
    <a role="button" class="btn btn-dark" asp-action="Index">Voltar para Lista de Pacientes</a>
</div>


<style>
    .col-md-6 img 
    {
        width:680px;
        height:530px;
    }

    .btn-primary {
        margin-top: 12px;
    }
</style>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/5.0.6/jquery.inputmask.min.js"></script>

    <script>

        $(document).ready(function () {
            // Aplica a máscara no campo de CPF
            $('#cpf').inputmask('999.999.999-99');
            $('#telefoneInput').inputmask('(99) 99999-9999')

            // Validação do campo de CPF
            $('#cpf').on('input', function () {
                var cpf = $(this).val().replace(/\D/g, ''); // Remove caracteres não numéricos

                // Verifica se o CPF possui 11 dígitos
                if (cpf.length !== 11) {
                    $(this).addClass('is-invalid');
                    $('#cpfValidation').show(); // Exibe a mensagem de campo inválido
                    return;
                }

                // Verifica se o CPF é válido utilizando regex
                var regex = /^([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{2})$/;
                if (!regex.test(cpf)) {
                    $(this).addClass('is-invalid');
                    $('#cpfValidation').show(); // Exibe a mensagem de campo inválido
                    return;
                }

                if (/^(\d)\1{10}$/.test(cpf)) {
                    $(this).addClass('is-invalid');
                    $('#cpfValidation').show(); // Exibe a mensagem de campo inválido
                    return;
                }

                // Verificação do dígito verificador
                var digito1 = cpf.substring(9, 10);
                var digito2 = cpf.substring(10, 11);
                var soma = 0;
                var i;
                for (i = 0; i < 9; i++) {
                    soma += parseInt(cpf.charAt(i)) * (10 - i);
                }
                var resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);
                if (resultado !== parseInt(digito1)) {
                    $(this).addClass('is-invalid');
                    $('#cpfValidation').show(); // Exibe a mensagem de campo inválido
                    return;
                }
                soma = 0;
                for (i = 0; i < 10; i++) {
                    soma += parseInt(cpf.charAt(i)) * (11 - i);
                }
                resultado = soma % 11 < 2 ? 0 : 11 - (soma % 11);
                if (resultado !== parseInt(digito2)) {
                    $(this).addClass('is-invalid');
                    $('#cpfValidation').show(); // Exibe a mensagem de campo inválido
                    return;
                }

                $(this).removeClass('is-invalid');
                $('#cpfValidation').hide();

            });



            $('#emailInput').on('input', function () {
                var email = $("#emailInput").val(); 
                if(email != "" && email != null)
                {
                    validateEmail(email);
                }
                
                    
            });

            function validateEmail(email) {
                // Envie a solicitação Ajax para o servidor
                $.ajax({
                    url: 'IsValidEmail',
                    dataType: 'json',
                    data: { email: email },
                    success: function (response) {
                        if (response == true) {
                            $('#emailInput').removeClass('is-invalid');
                            $('#emailError').text('');
                        } else {
                            $('#emailInput').addClass('is-invalid');
                            $('#emailError').text('E-mail inválido');
                        }
                    },
                    error: function () {
                        // Lidar com erros na solicitação Ajax
                        console.log('Ocorreu um erro na solicitação Ajax.');
                    }
                });
            }


            $('#telefoneInput').on('input', function () {
                var telefone = $(this).val();

                // Remove todos os caracteres não numéricos
                telefone = telefone.replace(/\D/g, '');
               
                if (isValidTelefone(telefone)) {
                  
                    $(this).removeClass('is-invalid');
                } else {
                    
                    $(this).addClass('is-invalid');
                }

                function isValidTelefone(telefone) {
                    
                    telefone = telefone.replace(/\D/g, '');

                  
                    if (telefone.length === 10 || telefone.length === 11) {
                      
                        if (telefone.length === 11 && telefone.charAt(2) !== '9') {
                            return false;
                        }

                       
                        var allDigitsAreEqual = /^(\d)\1+$/.test(telefone);
                        if (allDigitsAreEqual) {
                            return false;
                        }

                      
                        return true;
                    }

                  
                    return false;
                }

        });


        });
    </script>
   
}
